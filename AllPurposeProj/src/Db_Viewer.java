/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Austin
 */

import allpurposeproj.ConnectDb;
import java.awt.event.KeyEvent;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.sql.Connection;
import javax.swing.*;
import java.sql.*;
import java.util.ArrayList;
import net.proteanit.sql.DbUtils;

public class Db_Viewer extends javax.swing.JFrame {
    
    
Connection connectDb = null;
ResultSet rs = null;
PreparedStatement pst = null;
ArrayList<JLabel> jLab = new ArrayList<>();
private int count = 0;
 
    /**
     * Creates new form Db_Viewer
     */
    public Db_Viewer() {
        
        
        initComponents();
        connectDb = ConnectDb.connectDB();
        updateTable();
        jLab.add(jLabel1);
        jLab.add(jLabel2);
        jLab.add(jLabel3);
        jLab.add(jLabel4);
        getColumn();
        
    }
    
   
    
    
    //Used to populate Labels with column headers
    public void getColumnNames(ResultSet rs) throws SQLException{
 
        ResultSetMetaData rsMetaData = rs.getMetaData();
        int numColumns = rsMetaData.getColumnCount();
        
        for(int i = 1; i<numColumns + 1; i++){
           
            String columnName = rsMetaData.getColumnName(i);
               
            
            jLab.get(i-1).setText(columnName);
  
            }
        
        rs.close();
        pst.close();
    }
    //Used to retrieve column header information
    //initializes connection and sql statement for call to getColumnNames()
    public void getColumn() {
        
        try{
        String sql = "select * from StorePOS";
        pst = connectDb.prepareStatement(sql);
        rs = pst.executeQuery();
        getColumnNames(rs);
        }catch(Exception e) {
            JOptionPane.showMessageDialog(null, e);
            
                }finally {
            try{
                rs.close();
                    pst.close();
            }
            catch(Exception e) {
                
            }
        }
        
        
        }
        
        
    
    
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        cmd_Add = new javax.swing.JButton();
        cmd_Delete = new javax.swing.JButton();
        cmd_Update = new javax.swing.JButton();
        cmd_Clear = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        cmd_TableEdit = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        cmd_Search = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        Table_Info = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Display Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 14), java.awt.Color.black)); // NOI18N

        jLabel3.setText("jLabel3");

        jLabel4.setText("jLabel4");

        jLabel1.setText("jLabel1");

        jLabel2.setText("jLabel2");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField4))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        jScrollPane3.setViewportView(jPanel1);

        cmd_Add.setText("Add");
        cmd_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_AddActionPerformed(evt);
            }
        });

        cmd_Delete.setText("Delete");
        cmd_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_DeleteActionPerformed(evt);
            }
        });

        cmd_Update.setText("Update");
        cmd_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_UpdateActionPerformed(evt);
            }
        });

        cmd_Clear.setText("Clear");
        cmd_Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_ClearActionPerformed(evt);
            }
        });

        cmd_TableEdit.setText("Edit Table");
        cmd_TableEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_TableEditActionPerformed(evt);
            }
        });

        jButton2.setText("Graph");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Save File");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmd_TableEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cmd_TableEdit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addGap(34, 34, 34))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(cmd_Update, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmd_Add, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmd_Delete, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                    .addComponent(cmd_Clear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmd_Add)
                    .addComponent(cmd_Delete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmd_Update)
                    .addComponent(cmd_Clear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 14), new java.awt.Color(0, 0, 0))); // NOI18N

        cmd_Search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cmd_SearchKeyReleased(evt);
            }
        });

        Table_Info.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        Table_Info.setColumnSelectionAllowed(true);
        Table_Info.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table_InfoMouseClicked(evt);
            }
        });
        Table_Info.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Table_InfoKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(Table_Info);
        Table_Info.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE)
                    .addComponent(cmd_Search))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cmd_Search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jMenu1.setText("File");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Save");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Close");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Edit Table");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(721, 457));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
//Add function if user wishes to add an entry to the database.
    private void cmd_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_AddActionPerformed
        try{
            String sql = "Insert into StorePOS (ItemNum,ItemName,Quantity,Price) values (?,?,?,?)";
            pst = connectDb.prepareStatement(sql);
            pst.setString(1, jTextField1.getText());
            pst.setString(2, jTextField2.getText());
            pst.setString(3, jTextField3.getText());
            pst.setString(4, jTextField4.getText());
            
            
            pst.execute();
            
            JOptionPane.showMessageDialog(null, "Information Saved");
        
        }catch(Exception e) {
            
            JOptionPane.showMessageDialog(null, e);
        }
        updateTable();
       
    }//GEN-LAST:event_cmd_AddActionPerformed
//Delete function if user wishes to remove an entry from the Database
    private void cmd_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_DeleteActionPerformed
       String sql = "delete from StorePOS where ItemNum =?";
        
        try {
           pst = connectDb.prepareStatement(sql);
           
           pst.setString(1, jTextField1.getText());
           
           pst.execute();
           updateTable();
            JOptionPane.showMessageDialog(null, "Entry deleted");
        
        
        
        }catch(Exception e) {
            
            JOptionPane.showMessageDialog(null, e);
        }
       
                  
    }//GEN-LAST:event_cmd_DeleteActionPerformed
//Used to update current item selected, variables created to store user entered values for SQLite statement.
    private void cmd_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_UpdateActionPerformed
        try {
            
        String value1 = jTextField1.getText();
        String value2 = jTextField2.getText();
        String value3 = jTextField3.getText();
        String value4 = jTextField4.getText();
        
        String sql = "update StorePOS set ItemNum ='"+value1+"', ItemName = '"+value2+"', Quantity = '"+value3+"', Price = '"+value4+"' where ItemNum ='"+value1+"' ";
        
        pst = connectDb.prepareStatement(sql);
        pst.execute();
        updateTable();
        JOptionPane.showMessageDialog(null, "Entry Updated");
        
         }catch(Exception e) {
            
            JOptionPane.showMessageDialog(null, e);
        }
        
        updateTable();
    }//GEN-LAST:event_cmd_UpdateActionPerformed
//Simple clear function to easily clear all TextFields
    private void cmd_ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_ClearActionPerformed
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        ;
                
    }//GEN-LAST:event_cmd_ClearActionPerformed
//Properly populates JTextFields with item selected in JTable
    private void Table_InfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Table_InfoMouseClicked
            
        try{
            
            int row = Table_Info.getSelectedRow();
            String Table_click = (Table_Info.getModel().getValueAt(row, 0).toString());
            String sql = "select * from StorePOS where ItemNum = '" +Table_click+ "' ";
            pst = connectDb.prepareStatement(sql);
            rs = pst.executeQuery();
            if(rs.next()) {
                
                String add1 = rs.getString("ItemNum");
                jTextField1.setText(add1);
                String add2 = rs.getString("ItemName");
                jTextField2.setText(add2);
                String add3 = rs.getString("Quantity");
                jTextField3.setText(add3);
                String add4 = rs.getString("Price");
                jTextField4.setText(add4);
            }
            
            
            
            
        }catch(Exception e) {
            
            JOptionPane.showMessageDialog(null, e);
        }
        
        

        
    }//GEN-LAST:event_Table_InfoMouseClicked
//Long if statement used to create search functionality. function at the moment is very basic and find search term in order presented in if statements
// Will look into removing most of statements with a loop.
    private void cmd_SearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmd_SearchKeyReleased
        try{
            String sql = "select * from StorePOS where ItemNum = ?";

            pst = connectDb.prepareStatement(sql);
            pst.setString(1, cmd_Search.getText());

            rs = pst.executeQuery();

            if(rs.next()) {
                String add1 = rs.getString("ItemNum");
                jTextField1.setText(add1);
                String add2 = rs.getString("ItemName");
                jTextField2.setText(add2);
                String add3 = rs.getString("Quantity");
                jTextField3.setText(add3);
                String add4 = rs.getString("Price");
                jTextField4.setText(add4);

            }

        }catch(Exception e) {

            JOptionPane.showMessageDialog(null, e);
        }

        try{
            String sql = "select * from StorePOS where ItemName = ?";

            pst = connectDb.prepareStatement(sql);
            pst.setString(1, cmd_Search.getText());

            rs = pst.executeQuery();

            if(rs.next()) {
                String add1 = rs.getString("ItemNum");
                jTextField1.setText(add1);
                String add2 = rs.getString("ItemName");
                jTextField2.setText(add2);
                String add3 = rs.getString("Quantity");
                jTextField3.setText(add3);
                String add4 = rs.getString("Price");
                jTextField4.setText(add4);

            }

        }catch(Exception e) {

            JOptionPane.showMessageDialog(null, e);
        }
        try{
            String sql = "select * from StorePOS where Quantity = ?";

            pst = connectDb.prepareStatement(sql);
            pst.setString(1, cmd_Search.getText());

            rs = pst.executeQuery();

            if(rs.next()) {
                String add1 = rs.getString("ItemNum");
                jTextField1.setText(add1);
                String add2 = rs.getString("ItemName");
                jTextField2.setText(add2);
                String add3 = rs.getString("Quantity");
                jTextField3.setText(add3);
                String add4 = rs.getString("Price");
                jTextField4.setText(add4);

            }

        }catch(Exception e) {

            JOptionPane.showMessageDialog(null, e);
        }

        try{
            String sql = "select * from StorePOS where Price = ?";

            pst = connectDb.prepareStatement(sql);
            pst.setString(1, cmd_Search.getText());

            rs = pst.executeQuery();

            if(rs.next()) {
                String add1 = rs.getString("ItemNum");
                jTextField1.setText(add1);
                String add2 = rs.getString("ItemName");
                jTextField2.setText(add2);
                String add3 = rs.getString("Quantity");
                jTextField3.setText(add3);
                String add4 = rs.getString("Price");
                jTextField4.setText(add4);

            }

        }catch(Exception e) {

            JOptionPane.showMessageDialog(null, e);
        }

        updateTable();
    }//GEN-LAST:event_cmd_SearchKeyReleased

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
           this.dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed
    //Same as save file button used to save .txt/working on .write format to make file easier to read for user.
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
         try {
            File file = new File("C:\\Users\\Public\\Documents\\Text.txt");
            
            if(!file.exists()){
                file.createNewFile();
            }
        FileWriter newFile = new FileWriter(file.getAbsoluteFile());
        BufferedWriter newBuff = new BufferedWriter(newFile);
        newBuff.write(jLabel1.getText() + "\n   |  \n" + jLabel2.getText() + "\n   |  \n" + jLabel3.getText()
                                        +  "\n   |  \n" + jLabel4.getText() + "\n   |  \n");
        newBuff.append(System.lineSeparator());
        
        for(int i = 0; i<Table_Info.getRowCount(); i++){
            newBuff.write("\n   \n");
            for(int j = 0; j <Table_Info.getColumnCount(); j++){
                newBuff.write(Table_Info.getModel().getValueAt(i, j)+"");
                newBuff.write("\n     |    \n");
            
            }
            newBuff.append(System.lineSeparator());
            
        }
        newBuff.close();
        newFile.close();
        JOptionPane.showMessageDialog(null, "File Saved");
        }catch(Exception e) {
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem3ActionPerformed
//Attempt to update table with user entered names, this is a work still in progress
//as I cannot find proper SQLite to update database column headers.
 //(Note ADD TABLE TableName ADD COLUMN ColumnnName {Type} Does not work or I have not found a working implementation of it so far/need to find workaround)
    private void cmd_TableEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_TableEditActionPerformed
        count++;
        jLabel1.setText("Column 1:");
        jLabel2.setText("Column 2:");
        jLabel3.setText("Column 3:");
        jLabel4.setText("Column 4:");
 
        if(count%2 != 0) {
            cmd_TableEdit.setText("Save Table");
        }
        else {
        String col1 = jTextField1.getText();
        String col2 = jTextField2.getText();
        String col3 = jTextField3.getText();
        String col4 = jTextField4.getText();
            
            if(col1.equals("") || col2.equals("") || col3.equals("") || col4.equals("")) {
            count++; 
            JOptionPane.showMessageDialog(null, "Each Column Header must have a value (Int,String,Int,Double) If you wish to use less Column enter _ ");
            }else{
                   
            updateTable2(col1,col2,col3,col4);
            cmd_TableEdit.setText("Edit Table");
            getColumn();
                    }
            
        }
           
        
    }//GEN-LAST:event_cmd_TableEditActionPerformed
//used to generate new JFrame which shows options for graphing
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        Grapher graph1 = new Grapher();
        graph1.setVisible(true);
        

        
        
        
    }//GEN-LAST:event_jButton2ActionPerformed
//Used to write to basic .txt file Filename is Text.txt Change in order to change file name, Actively working on formating issues so files are more easily readable.
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        try {
            File file = new File("C:\\Users\\Public\\Documents\\Text.txt");
            
            if(!file.exists()){
                file.createNewFile();
            }
        FileWriter newFile = new FileWriter(file.getAbsoluteFile());
        BufferedWriter newBuff = new BufferedWriter(newFile);
        newBuff.write(jLabel1.getText() + "\n   |  \n" + jLabel2.getText() + "\n   |  \n" + jLabel3.getText()
                                        +  "\n   |  \n" + jLabel4.getText() + "\n   |  \n");
        newBuff.append(System.lineSeparator());
        
        for(int i = 0; i<Table_Info.getRowCount(); i++){
            newBuff.write("\n   \n");
            for(int j = 0; j <Table_Info.getColumnCount(); j++){
                newBuff.write(Table_Info.getModel().getValueAt(i, j)+"");
                newBuff.write("\n     |    \n");
            
            }
            newBuff.append(System.lineSeparator());
            
        }
        newBuff.close();
        newFile.close();
        JOptionPane.showMessageDialog(null, "File Saved");
        }catch(Exception e) {
            JOptionPane.showMessageDialog(null,e);
        }
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    //Implemented for user interaction using up/down arrow keys to update information properly in cells
    private void Table_InfoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Table_InfoKeyReleased
       if(evt.getKeyCode() == KeyEvent.VK_DOWN  || evt.getKeyCode() == KeyEvent.VK_UP ){
            
            try{
            
            int row = Table_Info.getSelectedRow();
            String Table_click = (Table_Info.getModel().getValueAt(row, 0).toString());
            String sql = "select * from StorePOS where ItemNum = '" +Table_click+ "' ";
            pst = connectDb.prepareStatement(sql);
            rs = pst.executeQuery();
            if(rs.next()) {
                
                String add1 = rs.getString("ItemNum");
                jTextField1.setText(add1);
                String add2 = rs.getString("ItemName");
                jTextField2.setText(add2);
                String add3 = rs.getString("Quantity");
                jTextField3.setText(add3);
                String add4 = rs.getString("Price");
                jTextField4.setText(add4);
                
                
            }
             }catch(Exception e) {
            
            JOptionPane.showMessageDialog(null, e);
        }
            
            
            
        }
    }//GEN-LAST:event_Table_InfoKeyReleased
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Db_Viewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Db_Viewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Db_Viewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Db_Viewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Db_Viewer().setVisible(true);
            }
        });
    }
        // Updates table with current information from database, usually called after a change needs to be made such as Add/Delete into database
       private void updateTable() {
        
        try {
        String sql = "select * from StorePOS";
        pst = connectDb.prepareStatement(sql);
        rs = pst.executeQuery();
        Table_Info.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
            
        } finally {
            try{
                rs.close();
                    pst.close();
            }
            catch(Exception e) {
                
            }
        }
    }
       //Temporary Method for dynamic column names, unable to change column headers in database.
       //This is half of a work around until I find another way to change column headers in database 
       private void updateTable2(String col1,String col2, String col3, String col4) {
        
        try {
        String sql = "select ItemNum as '"+col1+"', ItemName as '"+col2+"', Quantity as '"+col3+"',Price as '"+col4+"'  from StorePOS";
        pst = connectDb.prepareStatement(sql);
        rs = pst.executeQuery();
        Table_Info.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
            
        } finally {
            try{
                rs.close();
                    pst.close();
            }
            catch(Exception e) {
                
            }
        }
    }
        
        
        
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table_Info;
    private javax.swing.JButton cmd_Add;
    private javax.swing.JButton cmd_Clear;
    private javax.swing.JButton cmd_Delete;
    private javax.swing.JTextField cmd_Search;
    private javax.swing.JButton cmd_TableEdit;
    private javax.swing.JButton cmd_Update;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
